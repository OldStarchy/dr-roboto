-- Please do not edit this file

-- This file is run by the CraftOS shell. It is the earliest point at which we can execute code.

-- Disable multishell
if (settings ~= nil) then
	if (multishell ~= nil) then
		settings.set('bios.use_multishell', false)
		settings.save('.settings')
		os.reboot()
	end
end

if (_G.debug_break == nil) then
	_G.debug_break = function()
	end
end

local isPc = false
local basePath
if (os.version == nil) then
	isPc = true
end

-- Redefine loadfile to include an env paramter
_G.loadfile = function(_sFile, _tEnv)
	if (_sFile:sub(1, 2) == './') then
		_sFile = _sFile:sub(3)
	end

	local file = fs.open(_sFile, 'r')
	if file then
		local func, err = loadstring(file.readAll(), _sFile)
		file.close()
		if (func ~= nil and type(_tEnv) == 'table') then
			setfenv(func, _tEnv)
		end
		return func, err
	end
	return nil, 'File not found'
end

if (isPc) then
	print('Running on PC - loading polyfills')
	require 'lfs'
	lfs.chdir('computerRoot')
	dofile '../_polyfills/_main.lua'

	dofile 'roboto/os.lua'
	return
end

local drRobotoIsLoaded = os.version and os.version():sub(1, 10) == 'Dr. Roboto'

if (not drRobotoIsLoaded) then
	local osshutdown = os.shutdown
	local osrun = os.run

	local file = fs.open('roboto/os.lua', 'r')
	local oschunk, err

	if file then
		oschunk, err = load(file.readAll(), 'roboto/os.lua', 't', getfenv(osshutdown))
		file.close()
	else
		error('Could not find Roboto OS')
	end

	if (oschunk == nil) then
		error('Could not load Roboto OS: ' .. err)
	end

	--os.shutdown will be called after the shell exits below
	os.shutdown = function()
		os.shutdown = osshutdown
		os.run = osrun

		local success, err = pcall(oschunk)
		xpcall(
			function()
				if (not success) then
					term.redirect(term.native())
					term.setBackgroundColour(colours.black)

					if (term.isColour()) then
						term.setTextColour(colours.red)
					end

					print(err)

					term.setTextColour(colours.white)
					print('Press any key to continue...')

					os.pullEvent('key')
				end
			end,
			function(err)
				print(err)
				print('Press any key to continue...')
				os.pullEvent('key')
			end
		)

		os.shutdown()
	end

	os.run = function(...)
	end

	shell.exit()
	return
end

if (fs.exists('mystartup.lua')) then
	log.info('Running mystartup.lua')
	dofile('mystartup.lua')
end
