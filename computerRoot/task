-- global taskManager

local cli = Cli('task', 'Cli interface for the TaskManager', 'list')

cli:addAction(
	'list',
	function()
		local tasks = taskManager:getTasks()

		print(#tasks .. ' tasks:')
		for i, task in ipairs(tasks) do
			print(' ' .. i .. ': ' .. tostring(task))
		end
	end,
	nil,
	'Lists queued tasks'
)

cli:addAction(
	'add',
	function(name, ...)
		if (not isType(name, 'string')) then
			print('Must specifiy name')
			return
		end

		local task = nil
		if (isDefined(name)) then
			local typ = getfenv()[name]
			print(typ)
			assertType(typ, Task)

			task = typ.fromArgs({...})
		elseif (isDefined(name .. 'Task')) then
			local typ = getfenv()[name .. 'Task']
			assertType(typ, Task)
			print(name .. 'Task')
			print(typ == GatherItemTask)
			print(typ)

			task = typ.fromArgs({...})
		else
			error('Unknown task type "' .. name .. '"')
		end

		taskManager:addTask(task)
	end,
	{'name', 'taskArgs...'},
	'Queues a task for completion'
)

cli:addAction(
	'run',
	function()
		print('Start executing tasks? [Y/n] ')

		os.pullEvent('key')

		while (true) do
			local e, cc = os.pullEvent('key_up')

			if (cc == 28 or cc == 21) then
				break
			elseif (cc == 49) then
				return
			end
			os.pullEvent('key')
		end

		local skillSet = SkillSet.GetDefaultSkillSet()

		local runner = TaskRunner(skillSet, taskManager, true)

		runner:run()
	end,
	nil,
	'Runs the currently queued tasks'
)

cli:run(...)
